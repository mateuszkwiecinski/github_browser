[versions]
navigation = "2.5.0-alpha04"
lifecycle = "2.4.1"
coroutines = "1.6.1"
paging = "3.1.1"
pagingCompose = "1.0.0-alpha14"
apollo = "3.2.2"
okhttp = "4.9.3"
starter = "0.44.0"
appcompat = "1.4.1"
swiperefreshlayout = "1.1.0"
constraintLayout = "2.1.3"
material = "1.5.0"
androidtest = "1.4.0"
androidArchCore = "2.1.0"
dagger = "2.41"
junit = "4.13.2"
mockito = "4.5.0"
mockitoKotlin = "4.0.0"
assertJ = "3.22.0"

[libraries]
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
material = { module = "com.google.android.material:material", version.ref = "material" }

lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-gradle = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-testing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
apollo-runtime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }
apollo-cache = { module = "com.apollographql.apollo3:apollo-normalized-cache", version.ref = "apollo" }
apollo-cache-sqlite = { module = "com.apollographql.apollo3:apollo-normalized-cache-sqlite", version.ref = "apollo" }
apollo-gradle = { module = "com.apollographql.apollo3:apollo-gradle-plugin", version.ref = "apollo" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

androidtest-core = { module = "androidx.test:core-ktx", version.ref = "androidtest" }
androidtest-rules = { module = "androidx.test:rules", version.ref = "androidtest" }
androidtest-coretesting = { module = "androidx.arch.core:core-testing", version.ref = "androidArchCore" }

starter-android = { module = "com.project.starter:android", version.ref = "starter" }

dagger-core = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-android = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
dagger-android-support = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-compiler-android = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }

junit-core = { module = "junit:junit", version.ref = "junit" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertJ" }

[bundles]
lifecycle = ["lifecycle-viewmodel", "lifecycle-livedata"]
navigation = ["navigation-ui", "navigation-fragment"]
apollo = ["apollo-runtime", "apollo-cache", "apollo-cache-sqlite"]
androidtest = ["androidtest-core", "androidtest-rules", "androidtest-coretesting"]

