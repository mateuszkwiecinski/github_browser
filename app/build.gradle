plugins {
    id("app.android")
    alias(libs.plugins.starter.easylauncher)
}

android {
    defaultConfig {
        applicationId "pl.mateuszkwiecinski.browser"
    }
    namespace "pl.mkwiecinski.browser"

    buildFeatures {
        buildConfig = true
        dataBinding = true
    }
    buildTypes {
        named("debug") {
            signingConfig signingConfigs.debug
        }
        named('release') {
            matchingFallbacks += ["debug"]
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            storeFile rootProject.file("keys/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    flavorDimensions += "api"
    productFlavors {
        register("mocked") {
            dimension "api"
        }
        register("graphql") {
            dimension "api"
            buildConfigField "String", "GITHUB_TOKEN", "\"${findGithubToken()}\""
            buildConfigField "String", "GITHUB_API", "\"https://api.github.com/graphql\""
        }
    }
}

easylauncher {
    defaultFlavorNaming(true)
}

dependencies {
    implementation(projects.presentation)
    graphqlImplementation(projects.data.graphql)
    mockedImplementation(projects.data.mocked)
    implementation(projects.domain)

    compileOnly(libs.navigation.ui)
}

private String findGithubToken() {
    if (hasProperty('github.token')) {
        return getProperty("github.token")
    }

    logger.error("Could not find github api token. " +
            "pass it as a project property `./gradlew -Pgithub.token=\"TOKEN\"` " +
            "or add `github.token` entry to your `local.properties` file")

    return null
}
