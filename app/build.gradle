plugins {
    id "com.starter.easylauncher"
    id "app.android"
}

android {
    defaultConfig {
        applicationId "pl.mateuszkwiecinski.browser"
        versionCode = 1
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures.dataBinding true

    signingConfigs {
        debug {
            storeFile rootProject.file("keys/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    flavorDimensions "api"
    productFlavors {
        mocked {
            dimension "api"
        }
        graphql {
            dimension "api"
            buildConfigField "String", "GITHUB_TOKEN", "\"${findGithubToken()}\""
            buildConfigField "String", "GITHUB_API", "\"https://api.github.com/graphql\""
        }
    }
}

easylauncher {
    defaultFlavorNaming true
}

dependencies {
    implementation project(":presentation")
    graphqlImplementation project(":data:graphql")
    mockedImplementation project(":data:mocked")
    implementation project(":domain")

    compileOnly "androidx.navigation:navigation-ui-ktx:2.3.5"
}

private String findGithubToken() {
    if (hasProperty('github.token')) {
        return getProperty("github.token")
    }
    def env = System.getenv('github_token') ?: System.getenv("GITHUB_TOKEN")
    if (env != null) {
        return env
    }
    def localProperties = rootProject.file('local.properties')
    if (localProperties.exists()) {
        Properties properties = new Properties()
        properties.load(rootProject.file('local.properties').newDataInputStream())

        def token = properties.getProperty('github.token')
        if (token != null) {
            return token
        }
    }

    logger.error("Could not find github api token. " +
            "Set a `github_token` environment variable, " +
            "pass it as a project property `./gradlew -Pgithub.token=\"TOKEN\"` " +
            "or add `github.token` entry to your `local.properties` file")

    return null
}
